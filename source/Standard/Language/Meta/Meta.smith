∙ M
	Prelude@Meta

M.do
	‣read/~ doc
	‣read/~ in
	‣read/~ out
	‣read/~ eg
	‣read/~ how
	‣read arguments
	‣read~ rest-argument
	‣read options
	‣read~ rest-option

	‣ test-eg![caller~]
		eg~.each |egg
			caller~.~
				egg.new-bound-of it
			|
				egg.run!

	‣val Empty
		of `{}`

	‣‣ from-maybe-pre maybe-make-meta-pre:Opt
		maybe-make-meta-pre.~ |make-pre:Fun
			M make-pre.of
		|
			M.Empty

	‣ merge other:M
		how
			TODO: write in Smith

		`
			var me = this;
			var m = {};
			['_doc', '_in', '_out', '_eg', '_how'].forEach(function(met) {
				if (me[met] != null) {
					if (other[met])
						throw new global.Error("Can not merge " + me + " and " + other);
					m[met] = me[met];
				}
				else if (other[met] != null) {
					m[met] = other[met];
				}
			})
			var res = M.of(m);

	‣override toString
		show-properties

export M

