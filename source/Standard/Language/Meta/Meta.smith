∙ M
	Prelude@Meta

M.do
	\(Bag 'doc 'in 'out 'eg 'how 'todo 'rest-argument 'rest).each
	\	me.‣read/~ it
	‣read/~ doc
		doc
			TODO

	‣read/~ in
		doc
			TODO

	‣read/~ out
		doc
			TODO

	‣read/~ eg
		doc
			TODO

	‣read/~ how
		doc
			TODO

	‣read/~ todo
		doc
			TODO

	‣read arguments
		doc
			TODO

	‣read~ rest-argument
		doc
			TODO

	‣read options
		doc
			TODO

	‣read~ rest-option
		doc
			TODO

	‣ test-eg![caller~]
		eg~.each |egg
			caller~.~
				egg.new-bound-of it
			|
				egg.run!

	‣val Empty
		of `{ }`

	‣‣ from-maybe-pre maybe-make-meta-pre:Opt
		maybe-make-meta-pre.~ |make-pre:Fun
			M make-pre.of
		|
			M.Empty

	‣ merge other:M
		how
			TODO: write in Smith

		`
			if (this === other)
				throw new global.Error('Can not merge with self');

			var m = {};

			function f(a, b) {
				Object.getOwnPropertyNames(a).forEach(function(key) {
					if (key == '_arguments')
						m[key] = a[key];
					else {
						if (b[key] != null)
							throw new global.Error(
								'Can not merge on key ' + key + '; has values "'
									+ a[key] + '" and "' + b[key] + '"');
						m[key] = a[key];
					}
				});
			}

			f(this, other);
			f(other, this);

			return M.of(m);

	‣override toString
		show-properties

export M

