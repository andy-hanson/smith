use ./Type

∙ O
	`global.Object`.to-type

O.‣ 'do |fun
	fun.unbound.call `this`

O.do
	‣ toString
		"<A {type.name}>"

	#alias 'toString 'inspect

	#{
	‣ own-property~ name
		(hasOwnProperty name).if
			property nam
	}#

	‣ property name
		`this[name]`

	‣ set-property name value
		`this[name] = value`

	‣ is-a type:Type
		type.subsumes? me

	‣ identical? a
		`this === a`

	‣ = a
		identical? a

	‣ ≠ a
		(= a).¬

	‣ send name:String
		`this[name](Array.prototype.slice.call(arguments, 1))`

export O
