static!

\ I know this won't override anything, but $$ relies on !.of.
$$new-ok of condition:Bool make-message~:Fun
	doc
		Asserts that `condition` is `Bool.True`.
		`message` is a Fun returning an Error or a Str.
	eg
		! Bool.True
		!.fail-message "False still not true!"
			! Bool.False
				"False still not true!"

	how
		Avoids condition.not.if! to save on stack trace.

	`
		if (!condition)
		{
			var makeMessage = make_45message_126.or(function() { return function() { return "Check failed"; } });
			var message = makeMessage();
			var m = message;
			if (m instanceof global.Error)
				throw m;
			else if (global.Object(m) instanceof global.String)
				throw new global.Error(m);
			else
				throw new Error("Bad message to '!' (and the check failed too).");
		}
