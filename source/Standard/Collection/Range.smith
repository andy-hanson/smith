super Iterable


‣‣override of[step~] min:Num max:Num
	∙ step
		step~.or
			1

	new min max step

‣override ∋ value:Num
	eg
		✔ ((Range 1 5 ).∋ 3)
		✔ ((Range 1 5 ).∋ 6).¬
		✔ ((Range[2] 1 5).∋ 4).¬

	(value.< max).∧
		∙ rel
			value.- min
		rel.negative?.¬.∧
			rel.divisible? step

data |min:Num max:Num step:Num
	in
		✔ (min.< max)
		✔ step.positive?

iterator
	‣‣override of range
		new range range.min

	data |range:Range !current:Num
		()

	‣ next
		(current.< range.max).?
			◆.returning current
				current! range.step.+_
		|
			stop

‣override toString
	"<{min}..{max} by {step}>"
