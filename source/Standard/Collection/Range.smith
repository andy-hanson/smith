super Iterable

‣‣new of min:ℝ max:ℝ step~
	∙ step
		step~.or
			1

	new min max step

‣new ∋ value:ℝ
	eg
		✔ ((Range 1 5 ).∋ 3)
		✔ ((Range 1 5 ).∋ 6).¬
		✔ ((Range 1 5 2).∋ 4).¬

	(value.< max).∧
		∙ rel
			value.- min
		rel.negative?.¬.∧
			rel.divisible? step

data |min:ℝ max:ℝ step:ℝ
	in
		✔.≤ min
			max
		✔ step.positive?

iterator
	‣‣new of range
		new range range.min

	data |range:Range !current:ℝ
		()

	‣ next
		(current.< range.max).?
			◆.returning current
				current! range.step.+_
		|
			stop

‣new toString
	"<{min}..{max} by {step}>"
