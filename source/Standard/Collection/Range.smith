super Iterable

$$new of min:Real max:Real step~
	val step
		step~.or
			1

	new min max step

$new ∋ value:Real
	eg
		! ((Range 1 5 ).∋ 3)
		! ((Range 1 5 ).∋ 6).not
		! ((Range 1 5 2).∋ 4).not

	(value.< max).and
		val rel
			value.- min
		rel.negative?.not.and
			rel.divisible? step

data |min:Real max:Real step:Real
	in
		!.<= min
			max
		! step.positive?

iterator
	$$new of range
		new range range.min

	data |range:Range !current:Real
		()

	$ next
		(current.< range.max).?
			Control.returning current
				current! range.step.+_
		|
			stop

$new toString
	"<{min}..{max} by {step}>"
