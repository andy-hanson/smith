super Iterable

$$new of width height fill
	TODO

data |width height data
	()

$ -to-index x y
	(y.* x).+ x

$new of x:Nat y:Nat
	(data) (to-index x y)

$ ! x:Nat y:Nat value
	data.! (to-index x y) value

$ row row:Nat
	in
		(Range 0 height).row

	data.slice (row.* width) width

$new size
	data.size

$ collect-with-indices collector:Fun
	doc
		`fun` should accept args: x y value

	val s
		size
	val w
		width
	val d
		data
	val collected
		Array.of-capacity s
	`
		var x = 0;
		var y = 0;
		for (var i = 0; i < s; i++) {
			x = (x + 1) % w;
			collected[i] = fun(x, y, d[i]);
		}

	Matrix width height collected

$ zip-with-indices
	collect-with-indices ...args
		args



$delegate iterator
	data
